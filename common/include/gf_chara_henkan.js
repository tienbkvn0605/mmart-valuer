function GF_chara_kana(check_tex){
	var str = check_tex;

	//ファイル区切り記号
	var file_split_before="<>";
	var file_split_after="＜＞";
	while((str.indexOf(file_split_before)) != -1){
		str = str.replace(file_split_before, file_split_after);  //文字列置換
	}

	//リットル記号
	var $l=String.fromCharCode(8467);
	//醤油の醤の難しい方
	var $syouyu=String.fromCharCode(37292);
	//マッチ条件作成
	var $mat=new RegExp("\[\\\\ｦ-ﾝ㎜㎝㎞㎎㎏㏄№㏍℡㊤㊥㊦㊧㊨㈱㈲㈹㍾㍽㍼㍻ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩ㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳,\"'･｢｣&"+$l+$syouyu+"髙﨑燁\]");
	//検索文字列を変換するための変換文字列配列
	var Kana1 = new Array("㎜","㎝","㎞","㎎","㎏","㏄","№","㏍","℡",
		"㊤","㊥","㊦","㊧","㊨","㈱","㈲","㈹","㍾","㍽","㍼","㍻",
		"Ⅰ","Ⅱ","Ⅲ","Ⅳ","Ⅴ","Ⅵ","Ⅶ","Ⅷ","Ⅸ","Ⅹ",
		"㍉","㌔","㌢","㍍","㌘","㌧","㌃","㌶","㍑","㍗","㌍","㌦","㌣","㌫","㍊","㌻",
		"①","②","③","④","⑤","⑥","⑦","⑧","⑨","⑩",
		"⑪","⑫","⑬","⑭","⑮","⑯","⑰","⑱","⑲","⑳",
		"ｶﾞ","ｷﾞ","ｸﾞ","ｹﾞ","ｺﾞ","ｻﾞ","ｼﾞ","ｽﾞ","ｾﾞ","ｿﾞ","ﾀﾞ","ﾁﾞ","ﾂﾞ","ﾃﾞ","ﾄﾞ",
		"ﾊﾞ","ﾋﾞ","ﾌﾞ","ﾍﾞ","ﾎﾞ","ﾊﾟ","ﾋﾟ","ﾌﾟ","ﾍﾟ","ﾎﾟ","ｳﾞ",
		"ｧ","ｨ","ｩ","ｪ","ｫ","ｯ","ｬ","ｭ","ｮ","ｰ",
		"ｱ","ｲ","ｳ","ｴ","ｵ","ｶ","ｷ","ｸ","ｹ","ｺ","ｻ","ｼ","ｽ","ｾ","ｿ","ﾀ","ﾁ","ﾂ","ﾃ","ﾄ","ﾅ","ﾆ","ﾇ","ﾈ","ﾉ",
		"ﾊ","ﾋ","ﾌ","ﾍ","ﾎ","ﾏ","ﾐ","ﾑ","ﾒ","ﾓ","ﾔ","ﾕ","ﾖ","ﾗ","ﾘ","ﾙ","ﾚ","ﾛ","ﾜ","ｦ","ﾝ",
		"カﾞ","キﾞ","クﾞ","ケﾞ","コﾞ","サﾞ","シﾞ","スﾞ","セﾞ","ソﾞ","タﾞ","チﾞ","ツﾞ","テﾞ","トﾞ",
		"ハﾞ","ヒﾞ","フﾞ","ヘﾞ","ホﾞ","ウﾞ","ハﾟ","ヒﾟ","フﾟ","ヘﾟ","ホﾟ",
		",",'"',"'","･","｢","｣",'\\','&',
		$l,$syouyu,"髙","﨑","燁");
	var Kana2 = new Array("mm","cm","km","mg","kg","cc","No.","k.k.","TEL",
		"上","中","下","左","右","(株)","(有)","(代)","明治","大正","昭和","平成",
		"I","II","III","IV","V","VI","VII","VIII","IX","X",
		"ミリ","キロ","センチ","メートル","グラム","トン","アール","ヘクタール","リットル","ワット","カロリー","ドル","セント","パーセント","ミリバール","ページ",
		"１．","２．","３．","４．","５．","６．","７．","８．","９．","１０．",
		"１１．","１２．","１３．","１４．","１５．","１６．","１７．","１８．","１９．","２０．",
		"ガ","ギ","グ","ゲ","ゴ","ザ","ジ","ズ","ゼ","ゾ","ダ","ヂ","ヅ","デ","ド",
		"バ","ビ","ブ","ベ","ボ","ヴ","パ","ピ","プ","ペ","ポ",
		"ァ","ィ","ゥ","ェ","ォ","ッ","ャ","ュ","ョ","ー",
		"ア","イ","ウ","エ","オ","カ","キ","ク","ケ","コ","サ","シ","ス","セ","ソ","タ","チ","ツ","テ","ト","ナ","ニ","ヌ","ネ","ノ",
		"ハ","ヒ","フ","ヘ","ホ","マ","ミ","ム","メ","モ","ヤ","ユ","ヨ","ラ","リ","ル","レ","ロ","ワ","ヲ","ン",
		"ガ","ギ","グ","ゲ","ゴ","ザ","ジ","ズ","ゼ","ゾ","ダ","ヂ","ヅ","デ","ド",
		"バ","ビ","ブ","ベ","ボ","パ","ピ","プ","ペ","ポ","ヴ",
		"、","”","’","・","「","」",'￥','＆',
		"リットル","醤","高","崎","火華");
	while(str.match($mat)){
		for(var i = 0; i < Kana1.length; i++){
			str = str.replace(Kana1[i], Kana2[i]);  //文字列置換
		}
	}
	return str;
}

var GF_chara_fasci = (function(){	//英数半角化
  var cclass
   = '['+String.fromCharCode(0xff01)+'-'+String.fromCharCode(0xff5e)+']';
  var re_fullwidth = new RegExp(cclass, 'g');
  var substitution = function(m){
    return String.fromCharCode(m.charCodeAt(0) - 0xfee0); // 0xff00 - 0x20
  };
  return function(s){ return s.replace(re_fullwidth, substitution) };
})();


function GF_chara_hiratokata(check_tex){
	var str = check_tex;
		//検索文字列を変換するための変換文字列配列
	var Kana1 = new Array("ぁ","あ","ぃ","い","ぅ","う","ぇ","え","ぉ","お","か","が","き","ぎ","く","ぐ","け","げ","こ","ご","さ","ざ","し","じ","す","ず","せ","ぜ","そ","ぞ","た","だ","ち","ぢ","っ","つ","づ","て","で","と","ど","な","に","ぬ","ね","の","は","ば","ぱ","ひ","び","ぴ","ふ","ぶ","ぷ","へ","べ","ぺ","ほ","ぼ","ぽ","ま","み","む","め","も","ゃ","や","","ゅ","ゆ","ょ","よ","ら","り","る","れ","ろ","ゎ","わ","ゐ","ゑ","を","ん");
	var Kana2 = new Array("ァ","ア","ィ","イ","ゥ","ウ","ェ","エ","ォ","オ","カ","ガ","キ","ギ","ク","グ","ケ","ゲ","コ","ゴ","サ","ザ","シ","ジ","ス","ズ","セ","ゼ","ソ","ゾ","タ","ダ","チ","ヂ","ッ","ツ","ヅ","テ","デ","ト","ド","ナ","ニ","ヌ","ネ","ノ","ハ","バ","パ","ヒ","ビ","ピ","フ","ブ","プ","ヘ","ベ","ペ","ホ","ボ","ポ","マ","ミ","ム","メ","モ","ャ","ヤ","","ュ","ユ","ョ","ヨ","ラ","リ","ル","レ","ロ","ヮ","ワ","ヰ","ヱ","ヲ","ン");
	while(str.match(/[ぁ-ん]/)){
		for(var i = 0; i < Kana1.length; i++){
			str = str.replace(Kana1[i], Kana2[i]);  //文字列置換
		}
	}
	return str;
}



function GF_mail_check(check_tex){//メールアドレス妥当性チェック
	var str = check_tex;
	
	if(CheckLength(str,1)){//全角チェック
		return false;	
	}else if(str.match(/[^0-9a-zA-Z-_\.@!#$%&\*+\/=?^`{|}]+/)){
		return false;
	}else if(!str.match(/.+@.+\..+/)){//構成チェック
		return false;
	}else{
		return true;
	}
}



/****************************************************************
* 全角/半角文字判定
*
* 引数 ： str チェックする文字列
* flg 0:半角文字、1:全角文字
* 戻り値： true:含まれている、false:含まれていない
*
****************************************************************/
function CheckLength(str,flg) {
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Shift_JIS: 0x0 ～ 0x80, 0xa0 , 0xa1 ～ 0xdf , 0xfd ～ 0xff
        // Unicode : 0x0 ～ 0x80, 0xf8f0, 0xff61 ～ 0xff9f, 0xf8f1 ～ 0xf8f3
        if ( (c >= 0x0 && c < 0x81) || (c == 0xf8f0) || (c >= 0xff61 && c < 0xffa0) || (c >= 0xf8f1 && c < 0xf8f4)) {
            if(!flg) return true;
        } else {
            if(flg) return true;
        }
    }
    return false;
}

/****************************************************************
* Stringオブジェクトのプロトタイプへのtrim機能追加
****************************************************************/
String.prototype.trim = function() {
	return this.replace(/^[\s　]+|[\s　]+$/g, "");
}
